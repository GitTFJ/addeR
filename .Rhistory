install_modules = function(modules, upgrade_pip = T){
if(upgrade_pip == T){
shell("python -m pip install --upgrade pip")
} else {
}
if(length(modules) == 0){
warning("No python modules have been specified")
} else {
for(a in modules){
shell(paste0("python -m pip install ",a))
}
}
}
install_modules(modules = c("keras", "tensorflow", "scikit-learn==0.19.1"), upgrade_pip = T)
devtools::document()
library(devtools)
install_github("GitTFJ/addeR")
devtools::document()
devtools::document()
library(devtools)
install_github("GitTFJ/addeR")
library(addeR)
py_download()
#Downloads python and opens installation program.
#We recommend adding python to the PATH
install_modules(modules = c("keras", "tensorflow", "scikit-learn==0.19.1"))
#Specify python modules to install (and versions where necassary)
link_python()
library(devtools)
install_github("GitTFJ/addeR")
library(addeR)
py_download()
#Downloads python and opens installation program.
#We recommend adding python to the PATH
install_modules(modules = c("keras", "tensorflow", "scikit-learn==0.19.1"))
#Specify python modules to install (and versions where necassary)
link_python(set_path = F)
library(devtools)
install_github("GitTFJ/addeR")
library(addeR)
py_download()
#Downloads python and opens installation program.
#We recommend adding python to the PATH
install_modules(modules = c("keras", "tensorflow", "scikit-learn==0.19.1"))
#Specify python modules to install (and versions where necassary)
link_python(set_path = F)
#Link python to R
devtools::document()
devtools::document()
install_modules = function(modules, upgrade_pip = T){
if(grepl("Windows",Sys.getenv()['OS'])){
if(upgrade_pip == T){
shell("python -m pip install --upgrade pip")
} else {
}
if(length(modules) == 0){
warning("No python modules have been specified")
} else {
for(a in modules){
shell(paste0("python -m pip install ",a))
}
}
} else {
if(upgrade_pip == T){
shell("python3 -m pip3 install --upgrade pip3")
} else {
}
if(length(modules) == 0){
warning("No python modules have been specified")
} else {
for(a in modules){
shell(paste0("python3 -m pip3 install ",a))
}
}
}
}
link_python = function(){
if(grepl("indows",Sys.getenv()['OS'])){
message("Select the python path. One possible locations is:
")
tmp = system("where python")
reticulate::use_python(file.choose())
} else {
message("Select the python path. One possible locations is:
")
tmp = system("which python3")
reticulate::use_python(file.choose())
}
}
#Prepare classification models
py_download = function(version = "3.6.8"){
if(grepl("Windows",Sys.getenv()['OS'])){
if(grepl("64", Sys.getenv()['R_ARCH'])){
installr::install.URL(paste0("https://www.python.org/ftp/python/",version,"/python-",version,"-amd64.exe"))
} else {
installr::install.URL(paste0("https://www.python.org/ftp/python/",version,"/python-",version,".exe"))
}
} else if (grepl("ac",Sys.getenv()['OS'])){
installr::install.URL(paste0("https://www.python.org/ftp/python/",version,"/python-",version,"-macosx10.6.pkg"))
} else {
system("sudo apt-get install python3.6")
}
confirm_quit = readline(
prompt="
To recognise the python download, Rstudio needs to be closed
and re-opened. Type 'quit' to close R now")
if(confirm_quit == "quit"){
q("no", 1, FALSE)
} else {
message("You have opted to close and restart R studio manually.")
}
}
library(devtools)
py_download()
install_modules(modules = c("keras", "tensorflow", "scikit-learn==0.19.1"))
link_python()
devtools::document()
devtools::document
devtools::document()
devtools::document()
devtools::document()
library(devtools)
install_github("GitTFJ/addeR")
devtools::document()
library(devtools)
install_github("GitTFJ/addeR")
library(addeR)
library(devtools)
install_github("GitTFJ/addeR")
library(addeR)
system("where python")
library(devtools)
document()
requireNamespace("dplyr")
require("xtable")
"xtable" %in% rownames(installed.packages())
browseURL("http://www.r-project.org")
browseURL(paste0("https://www.python.org/ftp/python/",version,"/python-",version,"-macosx10.6.pkg"))
version = "3.6.8"
browseURL(paste0("https://www.python.org/ftp/python/",version,"/python-",version,"-macosx10.6.pkg"))
devtools::document()
